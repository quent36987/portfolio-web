---
interface Props {
  title: string;
  description: string;
  date: string;
  technologies: string[];
  links: {
    site?: string;
    github?: string[];
  };
  objective: string;
  images: string[];
}

const { title, description, date, technologies, links, objective, images } = Astro.props;
---

<div class="bg-white rounded-lg shadow-md overflow-hidden max-w-4xl mx-auto mb-12">
  <div class="grid md:grid-cols-2 gap-6">
    {/* Image Carousel */}
    <div class="relative h-64 md:h-full">
      {images.map((image, index) => (
        <img
          src={`/projects/${title.toLowerCase().replace(/ /g, '-')}/${image}`}
          alt={`${title} - Image ${index + 1}`}
          class="absolute inset-0 w-full h-full object-contain"
          style={`opacity: ${index === 0 ? '1' : '0'}; transition: opacity 0.7s ease-in-out;`}
          data-carousel-item
        />
      ))}
      {images.length > 1 && (
        <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
          {images.map((_, index) => (
            <button
              class="w-2 h-2 rounded-full bg-white opacity-50 hover:opacity-100 transition-opacity"
              data-carousel-indicator={index}
              aria-label={`Image ${index + 1}`}
            />
          ))}
        </div>
      )}
    </div>

    {/* Content */}
    <div class="p-6">
      <h3 class="text-2xl font-semibold mb-2">{title}</h3>
      <p class="text-gray-600 text-sm mb-4">{date}</p>
      <p class="text-gray-700 mb-4">{description}</p>
      <div class="mb-4">
        <h4 class="font-medium mb-2">Objectif</h4>
        <p class="text-gray-700">{objective}</p>
      </div>
      <div class="mb-4">
        <h4 class="font-medium mb-2">Technologies</h4>
        <div class="flex flex-wrap gap-2">
          {technologies.map((tech) => (
            <span class="px-3 py-1 bg-gray-100 rounded-full text-sm">{tech}</span>
          ))}
        </div>
      </div>
      <div class="flex flex-wrap gap-4">
        {links.site && (
          <a
            href={links.site}
            target="_blank"
            rel="noopener noreferrer"
            class="text-blue-600 hover:text-blue-800"
          >
            Voir le site
          </a>
        )}
        {links.github && links.github.map((link) => (
          <a
            href={link}
            target="_blank"
            rel="noopener noreferrer"
            class="text-blue-600 hover:text-blue-800"
          >
            GitHub
          </a>
        ))}
      </div>
    </div>
  </div>
</div>

<script>
  function setupCarousel(card: HTMLElement) {
    const items = card.querySelectorAll('[data-carousel-item]');
    const indicators = card.querySelectorAll('[data-carousel-indicator]');
    let currentIndex = 0;

    function showImage(index: number) {
      items.forEach((item, i) => {
        (item as HTMLElement).style.opacity = i === index ? '1' : '0';
      });
      indicators.forEach((indicator, i) => {
        indicator.classList.toggle('opacity-100', i === index);
        indicator.classList.toggle('opacity-50', i !== index);
      });
    }

    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        currentIndex = index;
        showImage(currentIndex);
      });
    });

    // Auto-advance carousel
    if (items.length > 1) {
      setInterval(() => {
        currentIndex = (currentIndex + 1) % items.length;
        showImage(currentIndex);
      }, 5000);
    }
  }

  // Setup all carousels on the page
  document.querySelectorAll('.bg-white').forEach(card => setupCarousel(card));
</script>